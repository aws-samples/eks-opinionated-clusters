{"searchDocs":[{"title":"ISV 1","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/application/ISV1","content":"ISV 1 Placeholder","keywords":"","version":null},{"title":"Introduction","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/introduction","content":"Introduction Welcome to EKS Opinionated Clusters! This hands-on workshop is designed to help you explore and understand how various Independent Software Vendor (ISV) solutions integrate with Amazon Elastic Kubernetes Service (EKS). Through guided exercises, you'll learn how to enhance your EKS clusters with industry-leading third-party tools and solutions. You'll get practical experience working with popular ISV products that complement EKS in areas such as: Application Definition and Development, grouping tools that enable engineers to build applicationsRuntime, including components required for container operations on Amazon EKS. This covers container runtime software that initiates container execution, solutions for managing persistent data storage, and tools that handle container networking and connectivityObservability, describing the degree to which a system can be understood from its external outputsOrchestration, featuring tools that manage the execution and connectivity of applications, spanning components that enable communication and tools that provide the automation and resilience capabilities essential for scaling applications effectivelyProvisioning, including essential tools and solutions that establish and strengthen the core infrastructure required for building Kubernetes-based applications By the end of this workshop, you'll have a solid understanding of how to leverage ISV solutions to extend your EKS capabilities and optimize your container workloads on AWS. Let's begin exploring the rich ecosystem of ISV products that can help you get the most out of your Amazon EKS deployments! TODO Amend the areas in this workshop, depending on which ISVs decide to make their contribution.","keywords":"","version":null},{"title":"Application Definition and Development","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/application","content":"Application Definition and Development This layer, known as application definition and development, concentrates on equipping developers with the tools they need to create applications. TODO Consider the following sub-cathegories: Streaming &amp; MessagingImage BuildContinuous Integration &amp; Delivery","keywords":"","version":null},{"title":"Setup","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/introduction/setup","content":"Setup Amazon EKS is a managed Kubernetes service on AWS, that provides robust integration with various AWS services and supports both cloud and on-premises deployments. Its primary use cases are: High-availability application deploymentMicroservices architecture implementationAutomated software release processes (CICD)Serverless applications using AWS FargateMachine learning workloads executionHybrid cloud deploymentsCost-effective batch processingSecurity and compliance management Auto Mode is a feature of Amazon EKS that extends management of Kubernetes clusters by automating infrastructure setup and operation. It provides automated handling of key components including compute autoscaling, networking, load balancing, storage, and GPU support, allowing organizations to delegate infrastructure decisions to AWS. The service aims to reduce operational overhead while maintaining security, efficiency, and application availability through features like automated upgrades and dynamic resource scaling. More in detail, Auto Mode: Offers streamlined Kubernetes cluster management with minimal operational overheadProvides dynamic node scaling based on application demandsImplements security measures including immutable AMIs, SELinux controls, and read-only root file systemsEnforces a 21-day maximum node lifetime for security best practicesAutomates critical components like compute, storage, networking, and load balancingIncludes built-in support for GPU workloads and Pod IP address managementAllows customization through NodePools and NodeClasses for specific requirementsIntegrates with AWS services like EC2, EBS, and ELBPrevents direct node access by disallowing SSH or SSM access The labs in this workshop build on an EKS cluster created with Auto Mode, for quicker and easier deployment. This section outlines how to set up the such a cluster.","keywords":"","version":null},{"title":"ISV 1","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/observability/ISV1","content":"ISV 1 Placeholder","keywords":"","version":null},{"title":"ISV 1","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/orchestration/ISV1","content":"ISV 1 Placeholder","keywords":"","version":null},{"title":"Orchestration","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/orchestration","content":"Orchestration This area focuses on the essential tools and technologies needed to operate and link Kubernetes applications effectively. It encompasses foundational infrastructure components that manage both internal communication between applications and external network connections. Cloud native applications are designed for scalability, and these tools provide the necessary automation and resilience capabilities to make that possible. TODO Consider the following sub-cathegories: Scheduling &amp; OrchestrationCoordination &amp; Service DiscoveryAPI GatewayService Mesh","keywords":"","version":null},{"title":"Provisioning","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/provisioning","content":"Provisioning The provisioning layer serves as the fundamental base of the cloud native ecosystem. This foundational layer contains essential tools that establish and strengthen the underlying infrastructure where applications operate. It includes automation tools for infrastructure setup, configuration, and management, along with specialized solutions for handling container images - from scanning and verification to secure storage. Security is also a key component of this layer, featuring tools that help organizations implement and enforce security policies, manage access controls through authentication and authorization systems, and safely distribute sensitive information like passwords and encryption keys. TODO Consider the following sub-cathegories: Automation &amp; ConfigurationSecurity &amp; ComplianceKey Management","keywords":"","version":null},{"title":"In your own account","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/introduction/setup/aws_account","content":"","keywords":"","version":null},{"title":"Next Steps​","type":1,"pageTitle":"In your own account","url":"/eks-opinionated-clusters/docs/introduction/setup/aws_account#next-steps","content":" Now that your Amazon EKS cluster is operational, you're ready to proceed with the workshop modules. Use the top navigation bar to access the various workshop modules. You can start with the next section or choose any specific module that interests you.  Work through the modules at your own pace and follow the provided instructions carefully.  After completing the workshop, it's crucial to clean up your resources to avoid unnecessary charges. Follow the clean-up steps provided at the end of this page to remove all created resources.  After that, take some time to review what you've learned and consider how you might apply these concepts to your own projects or workloads.  ","version":null,"tagName":"h2"},{"title":"Cleanup​","type":1,"pageTitle":"In your own account","url":"/eks-opinionated-clusters/docs/introduction/setup/aws_account#cleanup","content":" danger This is step is intended to be performed only when you are done with the Workshop and you want to cleanup the deployed resources.  First, delete the cluster with eksctl:  ~$eksctl delete cluster --name $EKS_CLUSTER_NAME --region $AWS_REGION  Second, verify resource deletion:  Check the Amazon EKS console to ensure the cluster has been removed.Verify in the EC2 console that any associated nodes have been terminated.Check the VPC console to confirm that the VPC created for your cluster has been deleted.  Clean up any remaining resources (if necessary). In some cases, you may need to manually delete resources that weren't automatically removed:  Check for any remaining Load Balancers in the EC2 console.Look for any persistent volumes or snapshots in the EBS section of the EC2 console.Verify that any IAM roles or policies created for your cluster have been removed.  Review CloudFormation stacks Check the CloudFormation console for any stacks related to your cluster and delete them if they still exist. ","version":null,"tagName":"h2"},{"title":"Runtime","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/runtime","content":"Runtime This layer provides all the essential components required for containers to operate effectively in a cloud native setting. It includes three main elements: container runtimes (the software that launches and manages containers), storage solutions (tools that provide lasting data storage for containers), and networking tools (systems that handle container-to-container communications). It's important to distinguish these functions from the storage and networking capabilities in the provisioning layer. While the provisioning layer focuses on setting up the broader platform infrastructure, the tools in this layer are specifically designed for day-to-day container operations - managing their lifecycle, handling their data storage needs, and facilitating their network communications. TODO Consider the following sub-cathegories: Container RuntimeStorageOverlay network","keywords":"","version":null},{"title":"Observability","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/observability","content":"Observability Observability refers to how well we can understand a system's internal state by examining its external outputs. In computing systems, this is tracked through various metrics like processing time, memory usage, storage consumption, response times, and error rates. These measurements help determine how observable a system is. When we study and interpret this collected data, we're performing analysis. To maintain continuous service availability, comprehensive monitoring and analysis of your application is essential. This means watching all components closely to quickly identify and fix any unusual behavior or issues. That's why observability is a critical cross-cutting concern - it spans across all system layers rather than being confined to just one layer. This explains why it's typically represented alongside the architecture rather than within a specific layer.","keywords":"","version":null},{"title":"ISV 1","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/provisioning/ISV1","content":"ISV 1 Placeholder","keywords":"","version":null},{"title":"ISV 1","type":0,"sectionRef":"#","url":"/eks-opinionated-clusters/docs/runtime/ISV1","content":"ISV 1 Placeholder","keywords":"","version":null}],"options":{"disableVersioning":true,"id":"default"}}